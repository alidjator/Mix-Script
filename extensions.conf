[local-dial]
exten => s,1,NoCDR()
;RASIO
exten => s,n,Set(userdata=get_settings,101,${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
;DROP_CALL
exten => s,n,Set(userdata=get_settings,DROPCALL,${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
;MAXD_ROPCALL
exten => s,n,Set(userdata=get_settings,105,${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
;TIMEOUT
exten => s,n,Set(userdata=get_settings,103,${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
;DIAL_COUNT
exten => s,n,Set(userdata=get_dial_count,${STRFTIME(${EPOCH},,%Y-%m-%d 00:00:00)},${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
;
exten => s,n,Set(TRUNK=trunk${RAND(1,3)})
exten => s,n,Verbose(----------------------------------------------------------------------------------------------------------------------------)
exten => s,n,Set(READY=${QUEUE_MEMBER(autoanswer,ready)})
exten => s,n,Set(RTC=${MATH(${READY} - ${DIAL_COUNT},int)})
exten => s,n,GotoIf($[${DROPCALL} < ${MAXDROPCALL} ]?normal:downrasio)

exten => s,n(downrasio),Set(RASIO=1)
exten => s,n(normal),Set(RATIO_RTC=${MATH(${RTC} * ${RASIO},int)})
exten => s,n,Verbose(Autodialer : Data Drop Call ${DROPCALL}% * Max Drop Call ${MAXDROPCALL}% * Rasio ${RASIO} )
exten => s,n,GotoIf($[${RATIO_RTC} < 0 ]?signed:unsigned)
exten => s,n(signed),Set(RATIO_RTC=0)
exten => s,n(unsigned),Set(RTC=${RATIO_RTC})
exten => s,n,UserEvent(DashboardData,lastdial : ${STRFTIME(${EPOCH},,%H:%M:%S)},dialcount : ${DIAL_COUNT},agentready : ${READY},readytocall : ${RTC},tasktodial : ${ODBCROWS})
;
exten => s,n,Verbose(----------------------------------------------------------------------------------------------------------------------------)
exten => s,n,Verbose(CID ${CHANNEL(LINKEDID)} AUTODIALER : Dial at ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} * Agent Ready ${READY} * Dial Count ${DIAL_COUNT} * Ready to Call ${RTC})
exten => s,n,Verbose(----------------------------------------------------------------------------------------------------------------------------)
exten => s,n,GotoIf($[${RTC} > 0]?Priority1Condition:FinishTask)

exten => s,n(FinishTask),Verbose(CID ${CHANNEL(LINKEDID)} Task Terminated)
exten => s,n,UserEvent(DashboardData,lastdial : ${STRFTIME(${EPOCH},,%H:%M:%S)},dialcount : ${DIAL_COUNT},agentready : ${READY},readytocall : ${RTC},tasktodial : ${ODBCROWS})
exten => s,n,Hangup()

;Get callback data
exten => s,n(Priority1Condition),Set(userdata=get_callback_data,${CHANNEL(LINKEDID)},${STRFTIME(${EPOCH},,%Y-%m-%d)},${CHANNEL},${RTC},${STRFTIME(${EPOCH},,%H:%M:%S)})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${callback_data} > 0]?CallbackLog:Priority2Condition)
exten => s,n(CallbackLog),Log(NOTICE,${callback_data} Callback data found)
exten => s,n,Hangup()
;Get new data
exten => s,n(Priority2Condition),Set(userdata=get_new_data,${CHANNEL(LINKEDID)},${STRFTIME(${EPOCH},,%Y-%m-%d)},${CHANNEL},${RTC},${STRFTIME(${EPOCH},,%H:%M:%S)})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${new_data} > 0]?NewLog:Priority3Condition)
exten => s,n(NewLog),Log(NOTICE,${new_data} New data found)
exten => s,n,Hangup()
;Get repeat data
exten => s,n(Priority3Condition),Set(userdata=get_repeat_data,${CHANNEL(LINKEDID)},${STRFTIME(${EPOCH},,%Y-%m-%d)},${CHANNEL},${RTC},${STRFTIME(${EPOCH},,%H:%M:%S)})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${repeat_data} > 0]?RepeatLog:FinishTask)
exten => s,n(RepeatLog),Log(NOTICE,${repeat_data} Repeat data found)
exten => s,n,Hangup()
;
exten => h,1,Hangup()
	
[local-jump]
exten => s,1,NoCDR()
exten => s,n,Set(DIALSTATUS=TERMINATE)
exten => s,n,Set(SHARED(QUEUESTATUS,${CHANNEL})=TERMINATE)
exten => s,n,Set(AUTODIALTIME=${STRFTIME(${EPOCH},,%H:%M:%S)})

;Check Paid Contract ?
exten => s,n,Set(paid_status=0)
exten => s,n,Set(userdata=check_paid_status,${STRFTIME(${EPOCH},,%Y-%m-%d 00:00:00)},${CONTRACT_NO}),${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${paid_status} > 0]?PaidMark:ContactedContract)

;Check Skip Parameter ?
exten => s,n(ContactedContract),Set(contacted_status=0)
exten => s,n,Set(userdata=check_contacted_status,${STRFTIME(${EPOCH},,%Y-%m-%d)},${CONTRACT_NO}),${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${contacted_status} > 0]?ContactedMark:OncallContract)

;Check Oncall ?
exten => s,n(OncallContract),Set(oncall_status=0)
exten => s,n,Set(userdata=check_oncall_status,${STRFTIME(${EPOCH},,%Y-%m-%d)},${CONTRACT_NO}),${CHANNEL})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${oncall_status} > 0]?OncallMark:AppQueue)

;IF paid Detected ?
exten => s,n(PaidMark),Verbose(PID ${CHANNEL(LINKEDID)} [${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}] Contract ${CONTRACT_NO} Paid)	
exten => s,n,Set(userdata=update_paid_status,${CONTRACT_NO})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,Hangup()	

;IF Skip Parameter Detected ?
exten => s,n(ContactedMark),Verbose(PID ${CHANNEL(LINKEDID)} [${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}] Contract ${CONTRACT_NO} Contacted With Parameter ${PARAMETER})	
exten => s,n,Set(userdata=update_contacted_status,${CONTRACT_NO})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,Hangup()	

;IF Skip Parameter Detected ?
exten => s,n(OncallMark),Verbose(PID ${CHANNEL(LINKEDID)} [${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}] Contract ${CONTRACT_NO} Oncall)	
exten => s,n,Set(userdata=update_oncall_status,exec1,${CONTRACT_NO})
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,Hangup()	
	
;Set Queue App
exten => s,n(AppQueue),Set(register_queue_count=0)
exten => s,n,Set(userdata=register_queue,${CONTRACT_NO},${CALL_COUNTER},${RELATED_OVERDUE},${DIALER},${AUTODIALTIME},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${CALL_PRIORITY},${CALL_INTERFACE},${CHANNEL})	
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${register_queue_count} > 0]?AppOncall:Terminate)

exten => s,n(AppOncall),Set(oncall_count=0)
exten => s,n,Set(userdata=update_oncall_status,exec2,${CONTRACT_NO},${CALL_PRIORITY},${CALL_INTERFACE},${AUTODIALTIME},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},0,${CHANNEL})	
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${oncall_count} > 0]?Predial:Terminate)

;exten => s,n(Terminate),Hangup()

;Continue Dial
exten => s,n(Predial),Set(register_count=0)
exten => s,n,Set(userdata=register_process,${CHANNEL(LINKEDID)},${UNIQUE_ID},${CONTRACT_NO},${CUSTOMER_NO},${CALL_COUNTER},${PHONE_NUMBER},${CALL_PRIORITY},${RELATED_OVERDUE},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${CALL_INTERFACE},${CHANNEL})	
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${register_count} > 0]?AppDial:Terminate)
exten => s,n(Terminate),Hangup()

;Dial Number
exten => s,n(AppDial),Set(CHANNEL(accountcode)=${UNIQUE_ID})
exten => s,n,Log(NOTICE,Contract [${CONTRACT_NO}] CID ${PARENT_ID} use ${TRUNK})
exten => s,n,Dial(SIP/${TRUNK}/${PHONE_NUMBER},${TIMEOUT},gM(autoanswer,${TRUNK},${UNIQUE_ID},${CONTRACT_NO},${CUSTOMER_NO},${CALL_COUNTER},${PHONE_NUMBER},${CALL_PRIORITY},${RELATED_OVERDUE},${CHANNEL}))
;
exten => s,n,Verbose(PID ${CHANNEL(LINKEDID)} [${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}] *** Contract ${CONTRACT_NO} CID ${PARENT_ID} CSEQ ${SEQUENCE} Terminated with Status ${DIALSTATUS} at ${TRUNK} ***)
;exten => s,n,AGI(processor.php,unregister_process,${CHANNEL(LINKEDID)},${CONTRACT_NO},${CALL_PRIORITY},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${DIALSTATUS})
exten => s,n,HangUp()
;Update customer id
exten => h,1,AGI(processor.php,unregister_process,exec1,${CHANNEL(LINKEDID)},${CONTRACT_NO},${CALL_PRIORITY},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${DIALSTATUS})
exten => h,n,Set(QUEUESTATUS=${SHARED(QUEUESTATUS,${CHANNEL})})
;Save result
exten => h,n,GotoIf($["${QUEUESTATUS}" != ""]?SaveResult)
exten => h,n(SaveResult),Set(userdata=unregister_process,exec2,${CHANNEL(LINKEDID)},${CONTRACT_NO},${CALL_PRIORITY},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${DIALSTATUS},${CALL_COUNTER},${AUTODIALTIME},${PHONE_NUMBER})	
exten => h,n,AGI(processor.php,${userdata})

[macro-autoanswer]
exten => s,1,Set(MONITOR_FILENAME=${STRFTIME(${EPOCH},,%Y%m%d)}/${ARG2}-${ARG3}-${ARG4}-${ARG5}-${ARG6}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => s,n,Set(userdata=register_cdr_variable,${CHANNEL(LINKEDID)},${ARG2},${ARG3},${ARG4},${ARG5},${ARG6},${ARG7},${ARG8},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${MONITOR_FILENAME})	
exten => s,n,AGI(processor.php,${userdata})
;Enter Queue
exten => s,n,Verbose(PID ${CHANNEL(LINKEDID)} [${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}] *** Contract ${ARG3} Connected to Queue ***)
exten => s,n,Queue(autoanswer,n,,,3,,automark,,,)
exten => s,n,Set(userdata=register_process_answered,${CHANNEL(LINKEDID)},${ARG9},${ARG3},${ARG6},${ARG7},${DIALEDPEERNUMBER},${QUEUESTATUS},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})	
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,Set(SHARED(QUEUESTATUS,${ARG9})=${QUEUESTATUS})
exten => s,n,Hangup()
	
[macro-automark]
exten => s,1,Set(userdata=get_caller_info,${CHANNEL(LINKEDID)},${CHANNEL})	
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,GotoIf($[${caller_info} > 0]?Preconnect:Terminate)
exten => s,n(Terminate),Hangup()

exten => s,n(Preconnect),Set(userdata=get_user_id,${MEMBERINTERFACE},${CHANNEL})	
exten => s,n,AGI(processor.php,${userdata})
exten => s,n,Verbose(PID ${CHANNEL(LINKEDID)} [${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}] *** Contract ${CONTRACT_NO} Connected to Agent ${USER_ID} ***)

exten => s,n,Set(userdata=transfer_to_customer,${USER_ID},${STRFTIME(${EPOCH},,%H:%M:%S)},${CONTRACT_NO},${CALL_PRIORITY})
exten => s,n,AGI(processor.php,${userdata})

exten => s,n,UserEvent(CallerInfo,interface : ${MEMBERINTERFACE},unique : ${UNIQUE_ID},ContractNo : ${CONTRACT_NO},CustomerNo : ${CUSTOMER_NO},CallCounter : ${CALL_COUNTER},PhoneNumber : ${PHONE_NUMBER},vPriority : ${CALL_PRIORITY},RelatedOverdue : ${RELATED_OVERDUE},CreateTimestamp : ${CREATE_TIMESTAMP})
exten => s,n,Set(CDR(userfield)=${FILENAME})
exten => s,n,Set(CDR(contract_no)=${CONTRACT_NO})
exten => s,n,Set(CDR(customer_no)=${CUSTOMER_NO})
exten => s,n,Set(CDR(phone_number)=${PHONE_NUMBER})
exten => s,n,Set(CDR(username)=${USER_ID})
